name: Release & Publish

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure latest CI on main is successful
        uses: actions/github-script@v7
        with:
          script: |
            const res = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'test.yml',
              branch: 'main',
              status: 'success',
              per_page: 1
            });
            if (!res.data.workflow_runs.length) {
              core.setFailed('No successful CI runs on main branch found. Release is blocked.');
            }
            const latestRun = res.data.workflow_runs[0];
            if (latestRun.head_branch !== 'main' || latestRun.conclusion !== 'success') {
              core.setFailed('The latest CI run on main branch is not successful. Release is blocked.');
            }
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: 2.x
      - run: deno fmt --check
      - run: deno lint
      - run: deno test --allow-all

      # Check version in deno.json matches tag
      - name: Check version matches tag
        run: |
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          FILE_VERSION=$(jq -r .version deno.json)
          if [ "$TAG_VERSION" != "$FILE_VERSION" ]; then
            echo "Version in deno.json ($FILE_VERSION) does not match tag ($TAG_VERSION)" >&2
            exit 1
          fi

      # Generate changelog
      - name: Generate changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish to JSR
      - name: Publish to JSR
        run: deno publish
        env:
          JSR_TOKEN: ${{ secrets.JSR_TOKEN }}

      # Create GitHub Release with changelog
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: ./build/change_log.md
          draft: false
          prerelease: false
